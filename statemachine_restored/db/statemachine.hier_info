|top
CLOCK_50 => CLOCK_50.IN5
KEY[0] => KEY[0].IN1
KEY[1] => KEY[1].IN1
KEY[2] => KEY[2].IN5
HEX0[0] <= hex_decoder:hex0.seg
HEX0[1] <= hex_decoder:hex0.seg
HEX0[2] <= hex_decoder:hex0.seg
HEX0[3] <= hex_decoder:hex0.seg
HEX0[4] <= hex_decoder:hex0.seg
HEX0[5] <= hex_decoder:hex0.seg
HEX0[6] <= hex_decoder:hex0.seg
HEX1[0] <= hex_decoder:hex1.seg
HEX1[1] <= hex_decoder:hex1.seg
HEX1[2] <= hex_decoder:hex1.seg
HEX1[3] <= hex_decoder:hex1.seg
HEX1[4] <= hex_decoder:hex1.seg
HEX1[5] <= hex_decoder:hex1.seg
HEX1[6] <= hex_decoder:hex1.seg


|top|edge_detector:up_detector
clk => prev.CLK
reset_n => prev.ACLR
signal_in => rising_edge.IN1
signal_in => prev.DATAIN
rising_edge <= rising_edge.DB_MAX_OUTPUT_PORT_TYPE


|top|edge_detector:down_detector
clk => prev.CLK
reset_n => prev.ACLR
signal_in => rising_edge.IN1
signal_in => prev.DATAIN
rising_edge <= rising_edge.DB_MAX_OUTPUT_PORT_TYPE


|top|statemachine:sm
clk => state~5.DATAIN
reset_n => state~7.DATAIN
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_up => state.OUTPUTSELECT
btn_down => state.OUTPUTSELECT
btn_down => state.OUTPUTSELECT
btn_down => state.OUTPUTSELECT
btn_down => state.OUTPUTSELECT
btn_down => state.OUTPUTSELECT
btn_down => state.OUTPUTSELECT
btn_down => state.OUTPUTSELECT
speed_select[0] <= speed_select.DB_MAX_OUTPUT_PORT_TYPE
speed_select[1] <= speed_select.DB_MAX_OUTPUT_PORT_TYPE


|top|timer:timer_inst
clk => tick~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
reset_n => tick~reg0.ACLR
reset_n => counter[0].ACLR
reset_n => counter[1].ACLR
reset_n => counter[2].ACLR
reset_n => counter[3].ACLR
reset_n => counter[4].ACLR
reset_n => counter[5].ACLR
reset_n => counter[6].ACLR
reset_n => counter[7].ACLR
reset_n => counter[8].ACLR
reset_n => counter[9].ACLR
reset_n => counter[10].ACLR
reset_n => counter[11].ACLR
reset_n => counter[12].ACLR
reset_n => counter[13].ACLR
reset_n => counter[14].ACLR
reset_n => counter[15].ACLR
reset_n => counter[16].ACLR
reset_n => counter[17].ACLR
reset_n => counter[18].ACLR
reset_n => counter[19].ACLR
reset_n => counter[20].ACLR
reset_n => counter[21].ACLR
reset_n => counter[22].ACLR
reset_n => counter[23].ACLR
reset_n => counter[24].ACLR
reset_n => counter[25].ACLR
reset_n => counter[26].ACLR
reset_n => counter[27].ACLR
reset_n => counter[28].ACLR
reset_n => counter[29].ACLR
reset_n => counter[30].ACLR
reset_n => counter[31].ACLR
speed_select[0] => Decoder0.IN1
speed_select[0] => Add0.IN53
speed_select[0] => Add0.IN55
speed_select[0] => Add0.IN58
speed_select[0] => Equal0.IN1
speed_select[1] => Decoder0.IN0
speed_select[1] => Add0.IN39
speed_select[1] => Add0.IN41
speed_select[1] => Add0.IN43
speed_select[1] => Add0.IN44
speed_select[1] => Add0.IN52
speed_select[1] => Add0.IN57
speed_select[1] => Equal0.IN0
tick <= tick~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|counter:count
clk => units[0]~reg0.CLK
clk => units[1]~reg0.CLK
clk => units[2]~reg0.CLK
clk => units[3]~reg0.CLK
clk => tens[0]~reg0.CLK
clk => tens[1]~reg0.CLK
clk => tens[2]~reg0.CLK
clk => tens[3]~reg0.CLK
reset_n => units[0]~reg0.ACLR
reset_n => units[1]~reg0.ACLR
reset_n => units[2]~reg0.ACLR
reset_n => units[3]~reg0.ACLR
reset_n => tens[0]~reg0.ACLR
reset_n => tens[1]~reg0.ACLR
reset_n => tens[2]~reg0.ACLR
reset_n => tens[3]~reg0.ACLR
tick => units[0]~reg0.ENA
tick => tens[3]~reg0.ENA
tick => tens[2]~reg0.ENA
tick => tens[1]~reg0.ENA
tick => tens[0]~reg0.ENA
tick => units[3]~reg0.ENA
tick => units[2]~reg0.ENA
tick => units[1]~reg0.ENA
tens[0] <= tens[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tens[1] <= tens[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tens[2] <= tens[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tens[3] <= tens[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
units[0] <= units[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
units[1] <= units[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
units[2] <= units[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
units[3] <= units[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|hex_decoder:hex0
bcd[0] => Decoder0.IN3
bcd[1] => Decoder0.IN2
bcd[2] => Decoder0.IN1
bcd[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|top|hex_decoder:hex1
bcd[0] => Decoder0.IN3
bcd[1] => Decoder0.IN2
bcd[2] => Decoder0.IN1
bcd[3] => Decoder0.IN0
seg[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


